from bitstring import BitArray
from subprocess import call
import os
import shutil

script_path = 'C://Users//Kuba//Desktop//bsc_thesis'         # directory where Bin2PNG.exe is run and the image are generated
data_path = 'D://Backup//trainBytes' # path where dataset from kaggle is located (https://www.kaggle.com/c/malware-classification/data)
destination_path = 'D//ImagesGenerated'
os.chdir(data_path)
counter = 0

for file in os.listdir():  # looping through all the files
    os.chdir(data_path)       # directory containing .bytes files
    fileName, fileExtension = os.path.splitext(file)
    # counter += 1
    # print(counter)        # counter useful to resume the process from certain moment since the .bytes files are read in ascending order
    if fileExtension == '.bytes':
        bytesPath = f'{fileName}.bytes' # preparing file name
        data = open(bytesPath).read()   # reading bytes from a file
        lines = data.split('\n')        # \n at the end results in empty element

        if lines[len(lines) - 1] == '':
            lines.pop();

        hexPrep = ''
        for line in lines:
            hexPrep += line.split(' ', 1)[1]

        hexPrep = ''.join(hexPrep.split(' '))
        hexFinal = ''
        for ch in hexPrep:
            if ch != '?':
                hexFinal += ch  # skipping "?" in hex string

        binFinal = BitArray(hex=hexFinal)

        try:
            os.chdir(script_path)
            with open('in.exe', 'wb') as f:
                binFinal.tofile(f)

            program = 'Bin2PNG.exe'
            call([program, 'encrypt'])      # running the Bin2PNG.exe with 'encrypt' argument => (in.exe => image.png)
            if os.path.isfile(script_path + '//image.png'):   # if image was created correctly
                shutil.move(script_path + '//image.png', destination_path + f'//{fileName}.png')
        except Exception as e:
            print(e)
            pass    # skipping elements where there are permission problems
